on: push

env:
  resourceGroupName: Dev-Pels-01
  bicepfilePath: main.bicep

jobs:
  Test-Deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Install from PSGallery
      shell: pwsh
      run: |
        Set-PSRepository PSGallery -InstallationPolicy Trusted

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true

    - name: build Bicep file
      uses: Azure/cli@1.0.4
      with:
        inlineScript: |
          az bicep build --file ${{ env.bicepfilePath }} --outfile ./main.json

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        path: ./main.json 

    - name: Create Resource Group
      uses: Azure/powershell@v1
      with:
        inlineScript: |
          Select-AzSubscription ${{secrets.AZURE_SUBSCRIPTIONID}}
          New-AzResourceGroup -Name ${{ env.resourceGroupName }} -Location "West Europe" -Force
          New-AzResourceGroupDeployment -ResourceGroupName ${{ env.resourceGroupName }} -TemplateFile ./main.json -WhatIf
        azPSVersion: latest

  Deploy-Template:
    runs-on: ubuntu-latest
    needs: Test-Deployment
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true

    - name: Deploy bicep to Azure
      uses: Azure/cli@1.0.4
      with:
        inlineScript: |
          az deployment group create \
          --template-file ${{ env.bicepfilePath }} \
          -g ${{ env.resourceGroupName }}

  Compliancy-Scan:
    runs-on: ubuntu-latest
    needs: Deploy-Template

    steps:
    - name: Sleep Action
      uses: juliangruber/sleep-action@v1.0.1
      with:
        time: 15m

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true

    - name: Check for resource compliance
      uses: azure/policy-compliance-scan@v0
      with:
        scopes: |
          /subscriptions/${{secrets.AZURE_SUBSCRIPTIONID}}/resourceGroups/${{ env.resourceGroupName }}
