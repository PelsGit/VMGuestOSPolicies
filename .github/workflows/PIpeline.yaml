on: push

env:
  resourceGroupName: Dev-Pels-01
  bicepfilePath: main.bicep

jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install from PSGallery
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted

  Create-ResourceGroup:    
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:  
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true

    - name: Create Resource Group
      uses: Azure/powershell@v1
      with:
        inlineScript: |
          Select-AzSubscription fffb0c65-e90a-4b5d-adac-a5d6d399e2cc
          New-AzResourceGroup -Name ${{ env.resourceGroupName }} -Location "West Europe" -Force
        azPSVersion: 
          latest

  Test-Deployment:
    runs-on: ubuntu-latest
    needs: Create-ResourceGroup
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true

    - name: build Bicep file
      uses: Azure/cli@1.0.4
      with:
        inlineScript: |
          az bicep build --file ${{ env.bicepfilePath }} --outfile ./main.json

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        path: ./main.json 

    - name: Azure PowerShell Action
      uses: Azure/powershell@v1
      with:
        inlineScript: |
          New-AzResourceGroupDeployment -ResourceGroupName ${{ env.resourceGroupName }} -TemplateFile ./main.json -WhatIf
        azPSVersion: latest

  Deploy-Template:
    runs-on: ubuntu-latest
    needs: Test-Deployment
    environment:
      name: VMGuestOSPolicies.dev
    steps:

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true

    - name: Azure PowerShell Action
      uses: Azure/powershell@v1
      with:
        inlineScript: |
          New-AzResourceGroupDeployment -ResourceGroupName ${{ env.resourceGroupName }} -TemplateFile ./main.json -verbose -Force
        azPSVersion: latest

  Compliancy-Scan:
    runs-on: ubuntu-latest
    needs: Deploy-Template
    timeout-minutes: 15
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true

    - name: Check for resource compliance
      uses: azure/policy-compliance-scan@v0
      with:
        scopes: |
          /subscriptions/fffb0c65-e90a-4b5d-adac-a5d6d399e2cc
